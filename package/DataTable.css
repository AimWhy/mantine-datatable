/*
todo: remove this
From V6:
const useStyles = createStyles(
  (
    theme,
    {
      borderColor,
      rowBorderColor,
    }: {
      borderColor: string | ((theme: MantineTheme) => string);
      rowBorderColor: string | ((theme: MantineTheme) => string);
    }
  ) => {
    const borderColorValue = typeof borderColor === 'function' ? borderColor(theme) : borderColor;
    const rowBorderColorValue = typeof rowBorderColor === 'function' ? rowBorderColor(theme) : rowBorderColor;

    return {
      root: {
        position: 'relative',
        display: 'flex',
        flexDirection: 'column',
        overflow: 'hidden',
        tr: {
          backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,
        },
        '&&': {
          'thead tr th': {
            borderBottomColor: borderColorValue,
          },
          'tbody tr td': {
            borderTopColor: rowBorderColorValue,
          },
        },
      },
      lastRowBorderBottomVisible: {
        'tbody tr:last-of-type td': {
          borderBottom: `1px solid ${rowBorderColorValue}`,
        },
      },
      textSelectionDisabled: {
        userSelect: 'none',
      },
      table: {
        borderCollapse: 'separate',
        borderSpacing: 0,
      },
      tableWithBorder: {
        border: `1px solid ${borderColorValue}`,
      },
      tableWithColumnBorders: {
        '&&': {
          'th, td': {
            ':not(:first-of-type)': {
              borderLeft: `1px solid ${rowBorderColorValue}`,
            },
          },
        },
      },
      tableWithColumnBordersAndSelectableRecords: {
        thead: {
          'tr + tr': {
            th: {
              borderLeft: `1px solid ${rowBorderColorValue}`,
            },
          },
        },
      },
    };
  }
);
*/

.mantine-datatable {
  position: relative;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.mantine-datatable-with-border {
  border: rem(1px) solid
    light-dark(var(--mantine-datatable-border-color-light), var(--mantine-datatable-border-color-dark));
}

.mantine-datatable-table {
  background: var(--mantine-color-body);
  thead,
  tfoot,
  tbody,
  th,
  tr,
  td {
    background: inherit;
  }

  tbody tr:last-of-type {
    border-bottom: 0;
  }

  &[data-striped] {
    tbody tr:nth-of-type(odd) {
      background: light-dark(
        var(--mantine-datatable-row-odd-bg-color-light),
        var(--mantine-datatable-row-odd-bg-color-dark)
      );
    }
  }

  &[data-row-highlight-on-hover] {
    tbody tr:hover {
      background: light-dark(
        var(--mantine-datatable-row-hover-bg-color-light),
        var(--mantine-datatable-row-hover-bg-color-dark)
      );
    }
  }

  tbody tr[data-row-selected] {
    background: light-dark(
      var(--mantine-datatable-row-selected-bg-color-light),
      var(--mantine-datatable-row-selected-bg-color-dark)
    );
    &:nth-of-type(odd) {
      background: light-dark(
        var(--mantine-datatable-row-odd-selected-bg-color-light),
        var(--mantine-datatable-row-odd-selected-bg-color-dark)
      );
    }
  }

  &[data-row-highlight-on-hover] tbody tr[data-row-selected]:hover,
  tbody tr[data-row-context-menu-visible] {
    background: light-dark(
      var(--mantine-datatable-row-hover-selected-bg-color-light),
      var(--mantine-datatable-row-hover-selected-bg-color-dark)
    );
  }

  [data-row-with-pointer-cursor] {
    cursor: pointer;
  }

  &[data-text-selection-disabled] {
    user-select: none;
  }

  &[data-vertical-alignment='top'] td {
    vertical-align: top;
  }

  &[data-vertical-alignment='bottom'] td {
    vertical-align: bottom;
  }
}

/*
todo: remove this ??
.mantine-datatable-table-last-row-border-bottom-visible tbody tr:last-of-type td {
  border-bottom: rem(1px) solid
    light-dark(var(--mantine-datatable-row-border-color-light), var(--mantine-datatable-row-border-color-dark));
}
*/
